{"code":"/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { generateAuthToken } from '../api/generate-auth-token';\r\nimport { extractAppConfig } from '../helpers/extract-app-config';\r\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\r\nimport { remove, set, update } from '../helpers/idb-manager';\r\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\r\nimport { ERROR_FACTORY, isServerError } from '../util/errors';\r\nimport { sleep } from '../util/sleep';\r\nexport async function getToken(app) {\r\n    const appConfig = extractAppConfig(app);\r\n    await completeInstallationRegistration(appConfig);\r\n    // At this point we either have a Registered Installation in the DB, or we've\r\n    // already thrown an error.\r\n    return fetchAuthToken(appConfig);\r\n}\r\nasync function completeInstallationRegistration(appConfig) {\r\n    const { installationEntry, registrationPromise } = await getInstallationEntry(appConfig);\r\n    if (registrationPromise) {\r\n        // A createInstallation request is in progress. Wait until it finishes.\r\n        await registrationPromise;\r\n    }\r\n    else if (installationEntry.registrationStatus !== 2 /* COMPLETED */) {\r\n        // Installation ID can't be registered.\r\n        throw ERROR_FACTORY.create(\"create-installation-failed\" /* CREATE_INSTALLATION_FAILED */);\r\n    }\r\n}\r\nasync function fetchAuthToken(appConfig) {\r\n    let tokenPromise;\r\n    const entry = await update(appConfig, (oldEntry) => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (isAuthTokenValid(oldAuthToken)) {\r\n            // There is a valid token in the DB.\r\n            return oldEntry;\r\n        }\r\n        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n            // There already is a token request in progress.\r\n            tokenPromise = waitUntilAuthTokenRequest(appConfig);\r\n            return oldEntry;\r\n        }\r\n        else {\r\n            // No token or token expired.\r\n            if (!navigator.onLine) {\r\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n            }\r\n            const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n            tokenPromise = fetchAuthTokenFromServer(appConfig, inProgressEntry);\r\n            return inProgressEntry;\r\n        }\r\n    });\r\n    const authToken = tokenPromise\r\n        ? await tokenPromise\r\n        : entry.authToken;\r\n    return authToken.token;\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n */\r\nasync function waitUntilAuthTokenRequest(appConfig) {\r\n    // Unfortunately, there is no way of reliably observing when a value in\r\n    // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\r\n    // so we need to poll.\r\n    let entry = await updateAuthTokenRequest(appConfig);\r\n    while (entry.authToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n        // generateAuthToken still in progress.\r\n        await sleep(100);\r\n        entry = await updateAuthTokenRequest(appConfig);\r\n    }\r\n    const authToken = entry.authToken;\r\n    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n        throw ERROR_FACTORY.create(\"generate-token-failed\" /* GENERATE_TOKEN_FAILED */);\r\n    }\r\n    else {\r\n        return authToken;\r\n    }\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, (oldEntry) => {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        const oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return Object.assign({}, oldEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nasync function fetchAuthTokenFromServer(appConfig, installationEntry) {\r\n    try {\r\n        const authToken = await generateAuthToken(appConfig, installationEntry);\r\n        const updatedInstallationEntry = Object.assign({}, installationEntry, { authToken });\r\n        await set(appConfig, updatedInstallationEntry);\r\n        return authToken;\r\n    }\r\n    catch (e) {\r\n        if (isServerError(e) && (e.serverCode === 401 || e.serverCode === 404)) {\r\n            // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n            // Generate a new ID next time.\r\n            await remove(appConfig);\r\n        }\r\n        else {\r\n            const updatedInstallationEntry = Object.assign({}, installationEntry, { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n            await set(appConfig, updatedInstallationEntry);\r\n        }\r\n        throw e;\r\n    }\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    const now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    const inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return Object.assign({}, oldEntry, { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\r\n//# sourceMappingURL=get-token.js.map","references":["/tmp/tmp-19136jqr4muXJJfGW/packages/app-types/index.d.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/api/generate-auth-token.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/helpers/extract-app-config.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/helpers/get-installation-entry.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/helpers/idb-manager.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/interfaces/app-config.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/interfaces/installation-entry.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/util/constants.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/util/errors.ts","/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/util/sleep.ts"],"map":"{\"version\":3,\"file\":\"get-token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/functions/get-token.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/tmp/tmp-19136jqr4muXJJfGW/packages/installations/src/functions/get-token.d.ts","writeByteOrderMark":false,"text":"/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { FirebaseApp } from '@firebase/app-types';\r\nexport declare function getToken(app: FirebaseApp): Promise<string>;\r\n"}}
