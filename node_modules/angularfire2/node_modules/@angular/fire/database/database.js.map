{"version":3,"file":"database.js","sourceRoot":"","sources":["../../../src/database/database.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAElF,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAwD,oBAAoB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,eAAe,CAAC;AAGvM;IAIE,6BACgC,OAAuB,EACN,YAAoD,EAC1D,WAAuB,EAC3C,UAAkB,EACvC,IAAY;QAEZ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACrC,IAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACvD,OAAO,GAAG,CAAC,QAAQ,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAI,GAAJ,UAAQ,SAAwB,EAAE,OAAiB;QACjD,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAkB,GAAG,CAAC;QAC/B,IAAG,OAAO,EAAE;YACV,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;SACtB;QACD,OAAO,mBAAmB,CAAI,KAAK,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,oCAAM,GAAN,UAAU,SAAwB;QAChC,IAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC7C,OAAO,qBAAqB,CAAI,GAAG,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,0CAAY,GAAZ;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;IACxC,CAAC;IAlCU,mBAAmB;QAD/B,UAAU,EAAE;QAMR,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;QAC5B,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,yBAAyB,CAAC,CAAA;QAC7C,WAAA,QAAQ,EAAE,CAAA,EAAE,WAAA,MAAM,CAAC,mBAAmB,CAAC,CAAA;QACvC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;iEAAa,MAAM;YACjC,MAAM;OATH,mBAAmB,CAoC/B;IAAD,0BAAC;CAAA,AApCD,IAoCC;SApCY,mBAAmB;AAmDhC,OAAO,EAAE,mBAAmB,EAAE,CAAC","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { DatabaseQuery, PathReference, DatabaseSnapshot, ChildEvent, ListenEvent, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\nimport { getRef } from './utils';\nimport { InjectionToken } from '@angular/core';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\nimport { FirebaseDatabase, FirebaseOptions, FirebaseAppConfig, FirebaseOptionsToken, FirebaseNameOrConfigToken, RealtimeDatabaseURL, _firebaseAppFactory, FirebaseZoneScheduler } from '@angular/fire';\n\n@Injectable()\nexport class AngularFireDatabase {\n  public readonly database: FirebaseDatabase;\n  public readonly scheduler: FirebaseZoneScheduler;\n\n  constructor(\n    @Inject(FirebaseOptionsToken) options:FirebaseOptions,\n    @Optional() @Inject(FirebaseNameOrConfigToken) nameOrConfig:string|FirebaseAppConfig|null|undefined,\n    @Optional() @Inject(RealtimeDatabaseURL) databaseURL:string|null,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.scheduler = new FirebaseZoneScheduler(zone, platformId);\n    this.database = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, nameOrConfig);\n      return app.database(databaseURL || undefined);\n    });\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.database, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if(queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query, this);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\n    const ref = getRef(this.database, pathOrRef);\n    return createObjectReference<T>(ref, this);\n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\n}\n\nexport {\n  PathReference,\n  DatabaseSnapshot,\n  ChildEvent,\n  ListenEvent,\n  QueryFn,\n  AngularFireList,\n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n\nexport { RealtimeDatabaseURL };"]}