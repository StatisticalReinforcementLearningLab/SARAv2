{"version":3,"file":"firebase_list_factory.js","sourceRoot":"","sources":["../../../src/database-deprecated/firebase_list_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgZone } from '@angular/core';\nimport { FirebaseZoneScheduler } from '@angular/fire';\nimport * as utils from './utils';\nimport { AFUnwrappedDataSnapshot } from './interfaces';\nimport { FirebaseListObservable } from './firebase_list_observable';\nimport { Observer } from 'rxjs';\nimport { observeOn, switchMap, map } from 'rxjs/operators';\nimport { observeQuery } from './query_observable';\nimport { Reference, Query, FirebaseListFactoryOpts, DatabaseReference, DatabaseQuery, DatabaseSnapshot } from './interfaces';\n\nexport function FirebaseListFactory (\n  ref: DatabaseReference,\n  { preserveSnapshot, query = {} } :FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\n\n  if (utils.isEmptyObject(query)) {\n    return firebaseListObservable(ref, { preserveSnapshot });\n  }\n\n  const queryObs = observeQuery(query);\n  return new FirebaseListObservable(ref, subscriber => {\n    let sub = switchMap.call(map.call(queryObs, query => {\n      let queried: DatabaseQuery = ref;\n      // Only apply the populated keys\n      // apply ordering and available querying options\n      // eg: ref.orderByChild('height').startAt(3)\n      // Check orderBy\n      if (query.orderByChild) {\n        queried = queried.orderByChild(query.orderByChild);\n      } else if (query.orderByKey) {\n        queried = queried.orderByKey();\n      } else if (query.orderByPriority) {\n        queried = queried.orderByPriority();\n      } else if (query.orderByValue) {\n        queried = queried.orderByValue();\n      }\n\n      // check equalTo\n      if (utils.hasKey(query, \"equalTo\")) {\n        if (utils.hasKey(query.equalTo, \"value\")) {\n          queried = queried.equalTo(query.equalTo.value, query.equalTo.key);\n        } else {\n          queried = queried.equalTo(query.equalTo);\n        }\n\n        if (utils.hasKey(query, \"startAt\") || utils.hasKey(query, \"endAt\")) {\n          throw new Error('Query Error: Cannot use startAt or endAt with equalTo.');\n        }\n\n        // apply limitTos\n        if (!utils.isNil(query.limitToFirst)) {\n          queried = queried.limitToFirst(query.limitToFirst);\n        }\n\n        if (!utils.isNil(query.limitToLast)) {\n          queried = queried.limitToLast(query.limitToLast);\n        }\n\n        return queried;\n      }\n\n      // check startAt\n      if (utils.hasKey(query, \"startAt\")) {\n        if (utils.hasKey(query.startAt, \"value\")) {\n          queried = queried.startAt(query.startAt.value, query.startAt.key);\n        } else {\n          queried = queried.startAt(query.startAt);\n        }\n      }\n\n      if (utils.hasKey(query, \"endAt\")) {\n        if (utils.hasKey(query.endAt, \"value\")) {\n          queried = queried.endAt(query.endAt.value, query.endAt.key);\n        } else {\n          queried = queried.endAt(query.endAt);\n        }\n      }\n\n      if (!utils.isNil(query.limitToFirst) && query.limitToLast) {\n        throw new Error('Query Error: Cannot use limitToFirst with limitToLast.');\n      }\n\n      // apply limitTos\n      if (!utils.isNil(query.limitToFirst)) {\n          queried = queried.limitToFirst(query.limitToFirst);\n      }\n\n      if (!utils.isNil(query.limitToLast)) {\n          queried = queried.limitToLast(query.limitToLast);\n      }\n\n      return queried;\n    }), (queryRef: Reference, ix: number) => {\n      return firebaseListObservable(queryRef, { preserveSnapshot });\n    })\n    .subscribe(subscriber);\n\n    return () => sub.unsubscribe();\n  });\n}\n\n/**\n * Creates a FirebaseListObservable from a reference or query. Options can be provided as a second\n * parameter. This function understands the nuances of the Firebase SDK event ordering and other\n * quirks. This function takes into account that not all .on() callbacks are guaranteed to be\n * asynchonous. It creates a initial array from a promise of ref.once('value'), and then starts\n * listening to child events. When the initial array is loaded, the observable starts emitting values.\n */\nfunction firebaseListObservable(ref: Reference | DatabaseQuery, {preserveSnapshot}: FirebaseListFactoryOpts = {}): FirebaseListObservable<any> {\n\n  const toValue = preserveSnapshot ? (snapshot => snapshot) : utils.unwrapMapFn;\n  const toKey = preserveSnapshot ? (value => value.key) : (value => value.$key);\n\n  const listObs = new FirebaseListObservable(ref, (obs: Observer<any>) => {\n\n    // Keep track of callback handles for calling ref.off(event, handle)\n    const handles: { event: string, handle: (a: DatabaseSnapshot, b?: string | null | undefined) => any }[] = [];\n    let hasLoaded = false;\n    let lastLoadedKey: string = null!;\n    let array: DatabaseSnapshot[] = [];\n\n    // The list children are always added to, removed from and changed within\n    // the array using the child_added/removed/changed events. The value event\n    // is only used to determine when the initial load is complete.\n\n    ref.once('value', (snap: any) => {\n      if (snap.exists()) {\n        snap.forEach((child: any) => {\n          lastLoadedKey = child.key;\n        });\n        if ((<any>array).find((child: any) => toKey(child) === lastLoadedKey)) {\n          hasLoaded = true;\n          obs.next(array);\n        }\n      } else {\n        hasLoaded = true;\n        obs.next(array);\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n\n    const addFn = ref.on('child_added', (child: any, prevKey: string) => {\n      array = onChildAdded(array, toValue(child), toKey, prevKey);\n      if (hasLoaded) {\n        obs.next(array);\n      } else if (child.key === lastLoadedKey) {\n        hasLoaded = true;\n        obs.next(array);\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n    handles.push({ event: 'child_added', handle: addFn });\n\n    let remFn = ref.on('child_removed', (child: any) => {\n      array = onChildRemoved(array, toValue(child), toKey);\n      if (hasLoaded) {\n        obs.next(array);\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n    handles.push({ event: 'child_removed', handle: remFn });\n\n    let chgFn = ref.on('child_changed', (child: any, prevKey: string) => {\n      array = onChildChanged(array, toValue(child), toKey, prevKey);\n      if (hasLoaded) {\n        obs.next(array);\n      }\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n    handles.push({ event: 'child_changed', handle: chgFn });\n\n    return () => {\n      // Loop through callback handles and dispose of each event with handle\n      // The Firebase SDK requires the reference, event name, and callback to\n      // properly unsubscribe, otherwise it can affect other subscriptions.\n      handles.forEach(item => {\n        ref.off(item.event as any, item.handle);\n      });\n    };\n\n  });\n\n  // TODO: should be in the subscription zone instead\n  return observeOn.call(listObs, new FirebaseZoneScheduler(new NgZone({}), {}));\n\n}\n\nexport function onChildAdded(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\n  if (!arr.length) {\n    return [child];\n  }\n  return arr.reduce((accumulator: DatabaseSnapshot[], curr: DatabaseSnapshot, i:number) => {\n    if (!prevKey && i===0) {\n      accumulator.push(child);\n    }\n    accumulator.push(curr);\n    if (prevKey && prevKey === toKey(curr)) {\n      accumulator.push(child);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildChanged(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\n  const childKey = toKey(child);\n  return arr.reduce((accumulator:any[], val:any, i:number) => {\n    const valKey = toKey(val);\n    if (!prevKey && i==0) {\n      accumulator.push(child);\n      if (valKey !== childKey) {\n        accumulator.push(val);\n      }\n    } else if(valKey === prevKey) {\n      accumulator.push(val);\n      accumulator.push(child);\n    } else if (valKey !== childKey) {\n      accumulator.push(val);\n    }\n    return accumulator;\n  }, []);\n}\n\nexport function onChildRemoved(arr:any[], child:any, toKey:(element:any)=>string): any[] {\n  let childKey = toKey(child);\n  return arr.filter(c => toKey(c) !== childKey);\n}\n\nexport function onChildUpdated(arr:any[], child:any, toKey:(element:any)=>string, prevKey:string): any[] {\n  return arr.map((v, i, arr) => {\n    if(!prevKey && !i) {\n      return child;\n    } else if (i > 0 && toKey(arr[i-1]) === prevKey) {\n      return child;\n    } else {\n      return v;\n    }\n  });\n}\n"]}