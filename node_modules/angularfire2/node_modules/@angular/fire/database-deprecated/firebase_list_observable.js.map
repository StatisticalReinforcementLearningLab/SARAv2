{"version":3,"file":"firebase_list_observable.js","sourceRoot":"","sources":["../../../src/database-deprecated/firebase_list_observable.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAsC,MAAM,MAAM,CAAC;AACtE,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAKjC;IAA+C,0CAAa;IAC1D,gCAAmB,IAAoB,EAAE,SAA4E;QAArH,YACE,kBAAM,SAAS,CAAC,SACjB;QAFkB,UAAI,GAAJ,IAAI,CAAgB;;IAEvC,CAAC;IACD,qCAAI,GAAJ,UAAW,QAAwB;QACjC,IAAM,UAAU,GAAG,IAAI,sBAAsB,CAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;QACzB,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/B,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,qCAAI,GAAJ,UAAK,GAAO;QACV,IAAG,CAAC,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,oCAAG,GAAH,UAAI,IAAuB,EAAE,KAAa;QAA1C,iBAOC;QANC,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;YACrC,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAS,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAA5C,CAA4C;YAC9D,YAAY,EAAE,cAAM,OAAY,IAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAA5B,CAA4B;YAChD,YAAY,EAAE,cAAM,OAAe,IAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAnC,CAAmC;YACvD,qBAAqB,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAA2B,IAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAApE,CAAoE;SAClG,CAAC,CAAC;IACL,CAAC;IAED,uCAAM,GAAN,UAAO,IAAuB,EAAE,KAAa;QAA7C,iBAOC;QANC,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;YACrC,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAS,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA/C,CAA+C;YACjE,YAAY,EAAE,cAAM,OAAY,IAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAA/B,CAA+B;YACnD,YAAY,EAAE,cAAM,OAAe,IAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,EAAtC,CAAsC;YAC1D,qBAAqB,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAA2B,IAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAvE,CAAuE;SACrG,CAAC,CAAC;IACL,CAAC;IAED,uCAAM,GAAN,UAAO,IAAuB;QAA9B,iBAWC;QATC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE;YACrC,UAAU,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAS,IAAI,CAAC,CAAC,MAAM,EAAE,EAA1C,CAA0C;YAC5D,YAAY,EAAE,cAAM,OAAoB,IAAK,CAAC,MAAM,EAAE,EAAlC,CAAkC;YACtD,YAAY,EAAE,cAAM,OAAmB,IAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAArC,CAAqC;YACzD,qBAAqB,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAA2B,IAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAlE,CAAkE;SAChG,CAAC,CAAC;IACL,CAAC;IAES,qDAAoB,GAA9B,UAA+B,IAAuB,EAAE,KAA6B;QACnF,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACxB,OAAO,KAAK,CAAC,UAAU,EAAE,CAAC;SAC3B;aAAM,IAAI,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YACpC,OAAO,KAAK,CAAC,YAAa,EAAE,CAAC;SAC9B;aAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;YAC7C,OAAO,KAAK,CAAC,YAAa,EAAE,CAAC;SAC9B;aAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE;YAC5C,OAAO,KAAK,CAAC,qBAAsB,EAAE,CAAA;SACtC;QACD,MAAM,IAAI,KAAK,CAAC,6EAA2E,OAAO,IAAM,CAAC,CAAC;IAC5G,CAAC;IAEH,6BAAC;AAAD,CAAC,AA/DD,CAA+C,UAAU,GA+DxD","sourcesContent":["import { Observable, Operator, Subscriber, Subscription } from 'rxjs';\nimport * as utils from './utils';\nimport { Reference, DataSnapshot, ThenableReference, AFUnwrappedDataSnapshot, FirebaseOperationCases, QueryReference, DatabaseSnapshot, DatabaseReference } from './interfaces';\n\nexport type FirebaseOperation = string | Reference | DataSnapshot | AFUnwrappedDataSnapshot;\n\nexport class FirebaseListObservable<T> extends Observable<T> {\n  constructor(public $ref: QueryReference, subscribe?: <R>(subscriber: Subscriber<R>) => Subscription | Function | void) {\n    super(subscribe);\n  }\n  lift<T, R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new FirebaseListObservable<R>(this.$ref);\n    observable.source = this;\n    observable.operator = operator;\n    observable.$ref = this.$ref;\n    return observable;\n  }\n\n  push(val:any):ThenableReference {\n    if(!this.$ref) {\n      throw new Error('No ref specified for this Observable!');\n    }\n    return this.$ref.ref.push(val);\n  }\n\n  set(item: FirebaseOperation, value: Object): Promise<void> {\n    return this._checkOperationCases(item, {\n      stringCase: () => this.$ref.ref.child(<string>item).set(value),\n      firebaseCase: () => (<Reference>item).set(value),\n      snapshotCase: () => (<DataSnapshot>item).ref.set(value),\n      unwrappedSnapshotCase: () => this.$ref.ref.child((<AFUnwrappedDataSnapshot>item).$key).set(value)\n    });\n  }\n\n  update(item: FirebaseOperation, value: Object): Promise<void> {\n    return this._checkOperationCases(item, {\n      stringCase: () => this.$ref.ref.child(<string>item).update(value),\n      firebaseCase: () => (<Reference>item).update(value),\n      snapshotCase: () => (<DataSnapshot>item).ref.update(value),\n      unwrappedSnapshotCase: () => this.$ref.ref.child((<AFUnwrappedDataSnapshot>item).$key).update(value)\n    });\n  }\n\n  remove(item?:FirebaseOperation): Promise<void> {\n    // if no item parameter is provided, remove the whole list\n    if (!item) {\n      return this.$ref.ref.remove();\n    }\n    return this._checkOperationCases(item, {\n      stringCase: () => this.$ref.ref.child(<string>item).remove(),\n      firebaseCase: () => (<DatabaseReference>item).remove(),\n      snapshotCase: () => (<DatabaseSnapshot>item).ref.remove(),\n      unwrappedSnapshotCase: () => this.$ref.ref.child((<AFUnwrappedDataSnapshot>item).$key).remove()\n    });\n  }\n\n  protected _checkOperationCases(item: FirebaseOperation, cases: FirebaseOperationCases) : Promise<void> {\n    if (utils.isString(item)) {\n      return cases.stringCase();\n    } else if (utils.isFirebaseRef(item)) {\n      return cases.firebaseCase!();\n    } else if (utils.isFirebaseDataSnapshot(item)) {\n      return cases.snapshotCase!();\n    } else if (utils.isAFUnwrappedSnapshot(item)) {\n      return cases.unwrappedSnapshotCase!()\n    }\n    throw new Error(`Method requires a key, snapshot, reference, or unwrapped snapshot. Got: ${typeof item}`);\n  }\n\n}\n"]}