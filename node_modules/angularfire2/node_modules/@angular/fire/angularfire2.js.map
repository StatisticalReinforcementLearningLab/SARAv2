{"version":3,"file":"angularfire2.js","sourceRoot":"","sources":["../../src/core/angularfire2.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, Subscription, queueScheduler as queue } from 'rxjs';\n\n// Put in database.ts when we drop database-depreciated\nexport const RealtimeDatabaseURL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\nexport class FirebaseZoneScheduler {\n  constructor(public zone: NgZone, private platformId: Object) {}\n  schedule(...args: any[]): Subscription {\n    return <Subscription>this.zone.runGuarded(function() { return queue.schedule.apply(queue, args)});\n  }\n  // TODO this is a hack, clean it up\n  keepUnstableUntilFirst<T>(obs$: Observable<T>) {\n    if (isPlatformServer(this.platformId)) {\n      return new Observable<T>(subscriber => {\n        const noop = () => {};\n        const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n        obs$.subscribe(\n          next => {\n            if (task.state === 'scheduled') { task.invoke() };\n            subscriber.next(next);\n          },\n          error => {\n            if (task.state === 'scheduled') { task.invoke() }\n            subscriber.error(error);\n          },\n          () => {\n            if (task.state === 'scheduled') { task.invoke() }\n            subscriber.complete();\n          }\n        );\n      });\n    } else {\n      return obs$;\n    }\n  }\n  runOutsideAngular<T>(obs$: Observable<T>): Observable<T> {\n    return new Observable<T>(subscriber => {\n      return this.zone.runOutsideAngular(() => {\n        return obs$.subscribe(\n          value => this.zone.run(() => subscriber.next(value)),\n          error => this.zone.run(() => subscriber.error(error)),\n          ()    => this.zone.run(() => subscriber.complete()),\n        );\n      });\n    });\n  }\n}\n\nexport const runOutsideAngular = (zone: NgZone) => <T>(obs$: Observable<T>): Observable<T> => {\n  return new Observable<T>(subscriber => {\n    return zone.runOutsideAngular(() => {\n      runInZone(zone)(obs$).subscribe(subscriber);\n    });\n  });\n}\n\nexport const runInZone = (zone: NgZone) => <T>(obs$: Observable<T>): Observable<T> => {\n  return new Observable<T>(subscriber => {\n    return obs$.subscribe(\n      value => zone.run(() => subscriber.next(value)),\n      error => zone.run(() => subscriber.error(error)),\n      ()    => zone.run(() => subscriber.complete()),\n    );\n  });\n}\n"]}