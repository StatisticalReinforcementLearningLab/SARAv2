{"version":3,"file":"fromTask.js","sourceRoot":"","sources":["../../../../../src/storage/observable/fromTask.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,MAAM,CAAC;AAIlC,MAAM,UAAU,QAAQ,CAAC,IAAgB;IACvC,OAAO,IAAI,UAAU,CAAqB,UAAU,CAAC,EAAE;QACrD,MAAM,QAAQ,GAAG,CAAC,IAAwB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvC,MAAM,QAAQ,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC7C,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACpD,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { Observable } from 'rxjs';\nimport { UploadTask, UploadTaskSnapshot } from '../interfaces';\nimport { storage } from 'firebase/app';\n\nexport function fromTask(task: UploadTask) {\n  return new Observable<UploadTaskSnapshot>(subscriber => {\n    const progress = (snap: UploadTaskSnapshot) => subscriber.next(snap);\n    const error = e => subscriber.error(e);\n    const complete = () => subscriber.complete();\n    task.on('state_changed', progress, error, complete);\n    return () => task.cancel();\n  });\n}\n"]}